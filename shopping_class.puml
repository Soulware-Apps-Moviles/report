@startuml diagram
package "Shopping Context - Domain Layer" {

  ' =======================
  ' === Interfaces
  ' =======================
  interface CatalogProductReference {
    + CatalogItemId productId
    + String productName
    + String thumbnailUrl
    + Decimal referencePrice
  }

  ' =======================
  ' === Aggregates & Entities
  ' =======================
  class ShoppingBag {
    + List<ShoppingBagItem> items
    --
    + addItem(productId: CatalogItemId, quantity: int)
    + removeItem(productId: CatalogItemId)
    + getTotal(): Decimal
  }

  class ShoppingBagItem <<ValueObject>> {
    + int quantity
    --
    + getSubtotal(): Decimal
  }

  class ShoppingList {
    + ShoppingListId id
    + UserId userId
    + String name
    + List<ShoppingListItem> items
    --
    + addItem(productId: CatalogItemId, quantity: int)
    + removeItem(itemId: ShoppingListItemId)
    + rename(newName: String)
  }

  class ShoppingListItem {
    + ShoppingListItemId id
    + int quantity
  }

  class FavoriteProduct {
    + UserId userId
    + LocalDateTime addedAt
  }

  ' =======================
  ' === Value Objects
  ' =======================
  class ShoppingListId <<ValueObject>> {
    + UUID value
  }

  class ShoppingListItemId <<ValueObject>> {
    + UUID value
  }

  class CatalogItemId <<ValueObject>> {
    + UUID value
  }
  
  class UserId <<ValueObject>> {
    + UUID value
  }

  ' =======================
  ' === Relationships
  ' =======================
  ShoppingBag "1" o-down- "*" ShoppingBagItem : contains >
  ShoppingList "1" o-- "*" ShoppingListItem : contains >
  ShoppingList --> UserId
  FavoriteProduct -up-> UserId
  FavoriteProduct -up-> CatalogItemId
  ShoppingList -left-> ShoppingListId
  ShoppingListItem --> ShoppingListItemId

  ShoppingBagItem ..|> CatalogProductReference
  FavoriteProduct ..|> CatalogProductReference
  ShoppingListItem ..|> CatalogProductReference
}
@enduml
